diff --git a/.gitignore b/.gitignore
index f2c41ba..9d4771e 100644
--- a/.gitignore
+++ b/.gitignore
@@ -139,5 +139,6 @@ output
 .venv
 processed
 downloads
+tag-weights.json
 
 **/.DS_Store
diff --git a/clips/sample1.mp4 b/clips/sample1.mp4
deleted file mode 100644
index 1d7369c..0000000
Binary files a/clips/sample1.mp4 and /dev/null differ
diff --git a/clips/sample2.mp4 b/clips/sample2.mp4
deleted file mode 100644
index 65e1b85..0000000
Binary files a/clips/sample2.mp4 and /dev/null differ
diff --git a/clips/sample3.mp4 b/clips/sample3.mp4
deleted file mode 100644
index 5b5e9a8..0000000
Binary files a/clips/sample3.mp4 and /dev/null differ
diff --git a/index.js b/index.js
index 8ebd6db..9aca7c6 100644
--- a/index.js
+++ b/index.js
@@ -12,7 +12,7 @@ for (const file of fs.readdirSync(path.join(__dirname, 'pipelines'))) {
 }
 
 (async () => {
-    const pipeline = randChoiceWithWeight(pipelines, pipelines.map(p => p.weight));
+    const pipeline = randChoiceWithWeight(pipelines, pipelines.map(p => p.weight)).choice;
     console.log("Selected pipeline:", pipeline.name);
     // if (pipeline.name === "jokes") { // skip legacy while testing.
         try {
diff --git a/pipelines/jokes.js b/pipelines/jokes.js
index bd81113..a405ab5 100644
--- a/pipelines/jokes.js
+++ b/pipelines/jokes.js
@@ -1,7 +1,7 @@
 const { randomJoke } = require("../src/scraper");
 const story_generator = require("../util/generateStory");
 const { saveSpeech } = require("../util/tts");
-const { randChoice, randInt } = require("../util/random");
+const { randChoice, randInt, randChoiceWithWeight } = require("../util/random");
 const { concatMP4, mixAudioVideo, reEncode } = require("../src/compile");
 const ffmpeg = require("fluent-ffmpeg");
 const path = require("node:path");
@@ -9,6 +9,7 @@ const fs = require("node:fs");
 const { wait } = require("../util/wait");
 const { upload } = require("../src/upload");
 const { cleanup } = require("../src/cleanup");
+const { getFileTag, getFilesByTag, getTagsInDir } = require("../util/tagSystem");
 
 module.exports = {
     name: "jokes",
@@ -36,9 +37,46 @@ module.exports = {
         })
         console.log("Speech generated. Length:", duration, "seconds");
 
-        const clips = fs.readdirSync(path.join(__dirname, "..", "clips")).map(file => path.join(__dirname, "..", "clips", file));
-        const clip = randChoice(clips);
+        const clipsTags = getTagsInDir(path.join(__dirname, "..", "clips"));
+        let tagWeights = {};
+
+        try {
+            let weights = fs.readFileSync(path.join(__dirname, "..", "tag-weights.json"), "utf-8");
+            weights = JSON.parse(weights);
+
+            tagWeights = weights;
+        } catch (error) {
+            console.error("Error loading tag weights:", error.message, "Generating default tag weights.");
+            tagWeights = {};
+            for (const tag of clipsTags) {
+                tagWeights[tag] = 1;
+            }
+        }
+
+        for (const tag of clipsTags) {
+            if (!tagWeights[tag]) {
+                tagWeights[tag] = 2;
+            }
+        }
+        
+        for (const tag in tagWeights) {
+            if (!clipsTags.includes(tag)) {
+                delete tagWeights[tag];
+            }
+        }        
+
+        const { choice: tag, weights: newTagWeights } = randChoiceWithWeight(clipsTags, clipsTags.map(t => tagWeights[t]));
+
+        for (let i = 0; i < clipsTags.length; i++) {
+            tagWeights[clipsTags[i]] = newTagWeights[i];
+        }
+
+        fs.writeFileSync(path.join(__dirname, "..", "tag-weights.json"), JSON.stringify(tagWeights, null, 4), "utf-8");
+
+        const clips = getFilesByTag(path.join(__dirname, "..", "clips"), tag);
+        const clip = path.resolve(path.join(__dirname, "..", "clips", randChoice(clips)));
         console.log("Selected clip:", clip);
+
         if (!fs.existsSync(clip)) {
             console.error("Clip not found:", clip);
             return;
diff --git a/util/generateStory.js b/util/generateStory.js
index 83ba096..14a4829 100644
--- a/util/generateStory.js
+++ b/util/generateStory.js
@@ -17,14 +17,14 @@ const generateStory = async (src, joke) => {
                 },
                 {
                     role: "user",
-                    content: `You will be given a joke from "${src}", and your task is to transform it into a short, humorous, and engaging story. The story should be:
-- Between 75-125 words (concise but entertaining).
-- Funny to the average person (not just tech geeks).
-- Suitable for all ages (lighthearted, no dark humor).
-- Ending with a punchline (to maintain the joke’s essence).
-You must ONLY return the story—no explanations, formatting, or introductions. Your writing should keep a snappy pace, feel natural, and emphasize the humor of the original joke.\n
-Joke:\n"${joke}"\n
-Now, craft the story.`
+                    content: `You will be given a joke from "${src}". Your mission:
+ - Explode the joke into a fast, ridiculous, and funny micro-story. 
+ - Keep it 35-70 words (short attention spans).  
+ - The story must be chaotic, exaggerated, and punchy (every line should feel like a slap).  
+ - It must start instantly (no build-up) and end with a savage punchline.
+ - Lighthearted, meme-worthy tone — think "cartoon logic," not "boring sitcom."
+ - Return ONLY the story — no explanation, no filler.\n
+Joke:\n"${joke}"`
                 }
             ]
         });
diff --git a/util/random.js b/util/random.js
index ed7c55d..1c4480e 100644
--- a/util/random.js
+++ b/util/random.js
@@ -8,16 +8,37 @@ module.exports.randChoiceWithWeight = (arr, weights) => {
     }
 
     const totalWeight = weights.reduce((sum, weight) => sum + weight, 0);
-  
+
     const random = Math.random() * totalWeight;
-  
+
     let cumulativeWeight = 0;
+    let selectedIndex = -1;
+
     for (let i = 0; i < arr.length; i++) {
         cumulativeWeight += weights[i];
         if (random < cumulativeWeight) {
-            return arr[i];
+            selectedIndex = i;
+            break;
         }
     }
+
+    if (selectedIndex === -1) {
+        // in case of floating point stupidity
+        selectedIndex = arr.length - 1;
+    }
+
+    const newWeights = weights.map((weight, idx) => {
+        if (idx === selectedIndex) {
+            return Math.max(1, weight * 0.5); // 1/2 the winner's chance, but dont let it die completely
+        } else {
+            return weight + 1; // buff others slowly
+        }
+    });
+
+    return {
+        choice: arr[selectedIndex],
+        weights: newWeights
+    };
 };
 
 module.exports.fisherYatesShuffle = (array) => {
diff --git a/util/tts.js b/util/tts.js
index 7544743..36803cd 100644
--- a/util/tts.js
+++ b/util/tts.js
@@ -1,7 +1,7 @@
 const axios = require("axios");
 const path = require("node:path");
 
-module.exports.saveSpeech = async (text, model = "tts_models/en/vctk/vits", speaker = "p226", output = path.resolve(__dirname, "../output/audio.mp3")) => {
+module.exports.saveSpeech = async (text, model = "tts_models/en/vctk/vits", speaker = "p376", output = path.resolve(__dirname, "../output/audio.mp3")) => {
     if (text == null) return;
     text = text.replace(/[^a-zA-Z0-9,.$€£%]/g, '');
 
